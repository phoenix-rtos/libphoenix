#
# Makefile for libphoenix - pattern rules for compiling and linking
#
# Copyright 2012-2018 Phoenix Systems
#
ifeq (,$(TOPDIR))
$(error Only main Makefile can be used for compilation)
endif

CURR_SUFFIX := $(patsubst $(TOPDIR)/%,%,$(abspath $(CURDIR))/)
PREFIX_O := $(BUILD_DIR)/$(CURR_SUFFIX)
PREFIX_A := $(BUILD_DIR)/$(CURR_SUFFIX)

# target install paths, can be provided exterally
PREFIX_PROG ?= $(BUILD_DIR)/prog/
PREFIX_PROG_STRIPPED ?= $(BUILD_DIR)/prog.stripped/

ARCH_OBJS := $(patsubst  %,$(PREFIX_O)%,$(ARCH_SRCS:.c=.o)) $(patsubst %,$(PREFIX_O)%,$(ARCH_ASMS:.S=.o))

# building programs
PROGS_UNSTRIPPED := $(patsubst %,$(PREFIX_PROG)%,$(PROGS))
PROGS_STRIPPED   := $(patsubst %,$(PREFIX_PROG_STRIPPED)%,$(PROGS))
PROGS_BASE_OBJS  := $(patsubst %,$(PREFIX_O)%,$(PROGS:=.o))
PROGS_OBJS       := $(patsubst %,$(PREFIX_O)%,$(PROGS_SRCS:.c=.o))

# suppress 'nothing to be done', prevent to delete intermediate files
all: $(ARCH) $(PROGS_UNSTRIPPED) $(PROGS_STRIPPED) $(PROGS_BASE_OBJS) $(PROGS_OBJS)
	@echo >/dev/null;

# add include path for auto-generated files
CFLAGS += -I"$(BUILD_DIR)/$(CURR_SUFFIX)"

$(PREFIX_O)%.o: %.c
	@mkdir -p $(@D)
	$(SIL)(printf " CC  %-24s  " "$<")
	$(SIL)$(CC) -c $(CFLAGS) "$<" -o "$@"
	$(SIL)$(CC) -M  -MD -MP -MF $(PREFIX_O)$*.c.d -MT "$@" $(CFLAGS) $<

	@(file="$@"; \
	datasz=0;\
	textsz=0;\
	for i in `$(OBJDUMP) -t $$file | grep -e " O " | awk '{ if ($$2 != "O") print $$5; else print $$4 }'`; do \
		datasz=`echo $$(($$datasz + 0x$$i))`;\
	done; \
	for i in `$(OBJDUMP) -t $$file | grep -e " F " | awk '{ print $$5 }'`; do \
		textsz=`echo $$(($$textsz + 0x$$i))`;\
	done;\
	printf "data=%-10s\ttext=%s\n" $$datasz $$textsz)

$(PREFIX_O)%.o: %.S
	@mkdir -p $(@D)
	$(SIL)(printf " ASM %-24s  " "$<")
	$(SIL)$(CC) -c $(CFLAGS) "$<" -o "$@"
	$(SIL)$(CC) -M  -MD -MP -MF $(PREFIX_O)$*.S.d -MT "$@" $(CFLAGS) $<

	@(file="$@"; \
	datasz=0;\
	textsz=0;\
	for i in `$(OBJDUMP) -t $$file | grep -e " O " | cut -c 18- |awk '{print $$2}'`; do \
		datasz=`echo $$(($$datasz + 0x$$i))`;\
	done; \
	for i in `$(OBJDUMP) -t $$file | grep -e " F " | cut -c 18- |awk '{print $$2}'`; do \
		textsz=`echo $$(($$textsz + 0x$$i))`;\
	done;\
	printf "data=%-10s\ttext=%s\n" $$datasz $$textsz)

$(PREFIX_A)%.a:
	@mkdir -p $(@D)
	@(printf " AR  %-24s  \n" "$*")
	$(SIL)$(AR) $(ARFLAGS) $@ $^ 2>/dev/null


$(PREFIX_PROG)%: $(PREFIX_O)%.o $(PROGS_OBJS) $(LIB)
	@mkdir -p $(@D)
	@(printf " LD  %-24s  \n" "$(@F)")
	$(SIL)$(LD) $(LDFLAGS) -o "$@" $^ $(GCCLIB)

$(PREFIX_PROG_STRIPPED)%: $(PREFIX_PROG)%
	@mkdir -p $(@D)
	@(printf " STR %-24s  \n" "$(@F)")
	$(SIL)$(STRIP) -s -o "$@" "$<"

$(ARCH): $(ARCH_OBJS)

# include file dependencies
ALL_D := $(wildcard $(PREFIX_O)*.d)
-include $(ALL_D)

.PHONY: all clean
