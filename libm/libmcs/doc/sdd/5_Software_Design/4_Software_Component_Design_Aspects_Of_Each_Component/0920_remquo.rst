remquo
~~~~~~

.. c:autodoc:: mathd/remquod.c

Special cases
^^^^^^^^^^^^^

+-----------------------------+-----------------------------+-----------------------------+-----------------------------+
| x                           | y                           | Result                      | :math:`*quo`                |
+=============================+=============================+=============================+=============================+
| :math:`\in \mathbb{F}`      | :math:`±0`                  | :math:`qNaN`                | :math:`0`                   |
+-----------------------------+-----------------------------+-----------------------------+-----------------------------+
| :math:`±Inf`                | :math:`\in \mathbb{F}`      | :math:`qNaN`                | :math:`0`                   |
+-----------------------------+-----------------------------+-----------------------------+-----------------------------+
| :math:`NaN`                 | :math:`\in \mathbb{F}`      | :math:`qNaN`                | :math:`0`                   |
+-----------------------------+-----------------------------+-----------------------------+-----------------------------+
| :math:`\in \mathbb{F}`      | :math:`NaN`                 | :math:`qNaN`                | :math:`0`                   |
+-----------------------------+-----------------------------+-----------------------------+-----------------------------+

Mathematical Approach
^^^^^^^^^^^^^^^^^^^^^

Implement similarly to :ref:`remainder`, and calculate the quotient while at it.

.. Here there be dragons. (TODO)

Requirements
^^^^^^^^^^^^

* REQ-ML-5600
* REQ-ML-5601
* REQ-ML-5620
* REQ-ML-5620
* REQ-ML-5640

Source Code Files
^^^^^^^^^^^^^^^^^

* libm/include/math.h
* libm/mathd/remquod.c
* libm/mathf/remquof.c

References
^^^^^^^^^^

* :ref:`remainder`
